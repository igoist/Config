set nocompatible  " be iMproved, required
filetype off  " required
set exrc


set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" ==== plugin manager
Plugin 'VundleVim/Vundle.vim'


" ==== helpers
" Plugin 'vim-scripts/L9'


" ==== File tree
Plugin 'scrooloose/nerdtree'


" ==== Completion
"Plugin 'Valloric/YouCompleteMe'
Plugin 'mattn/emmet-vim'


" ==== Git
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'


" ==== syntax helpers
Plugin 'scrooloose/syntastic'
" Plugin 'tpope/vim-surround'
" Plugin 'cakebaker/scss-syntax.vim'
Plugin 'othree/yajs.vim'
Plugin 'mxw/vim-jsx'
Plugin 'tpope/vim-commentary'

" Plugin 'mitsuhiko/vim-jinja'
" Plugin 'octol/vim-cpp-enhanced-highlight'
" Plugin 'ap/vim-css-color'
" Plugin 'Vimjas/vim-python-pep8-indent'


" ==== moving / searching
" Plugin 'easymotion/vim-easymotion'
" Plugin 'kien/ctrlp.vim'


" ==== snippets
" -- Plugin 'SirVer/ultisnips' " It's for python, I don't need it


" Status bar on bottom
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'


" ==== PLUGIN THEMES
Plugin 'morhetz/gruvbox'
" Plugin 'ryanoasis/vim-devicons'


call vundle#end()
filetype plugin indent on


" ==== Colors and other basic settings
colorscheme gruvbox
set guifont=Menlo\ 12
set guifont=Menlo\ for\ Powerline\ 12
" set guifont=Source\ Code\ Pro\ for\ Powerline
set fillchars+=vert:\ 
syntax enable
set background=dark
" set ruler
" set hidden
" set number
set laststatus=2
set smartindent
" set st sw=2 et
set shiftwidth=2
set tabstop=2
set expandtab
autocmd FileType js,jsx,css,scss,html,json  set shiftwidth=2 | set expandtab
" let &colorcolumn = '80'
:set guioptions-=m  "remove menu bar
:set guioptions-=T  "remove toolbar
:set guioptions-=r  "remove right-hand scroll bar
:set guioptions-=L  "remove left-hand scroll bar
:set lines=999 columns=999


" ==== NERDTREE
let NERDTreeIgnore = ['\.git', '\.sass-cache', 'node_modules', '__pycache__', '\.pyc$', '\.o$', '\.so$', '\.a$', '\.swp', '*\.swp', '\.swo', '\.swn', '\.swh', '\.swm', '\.swl', '\.swk', '\.sw*$', '[a-zA-Z]*egg[a-zA-Z]*', '.DS_Store']
let NERDTreeShowHidden = 1
" let g:NERDTreeWinPos = 'left'
let g:NERDTreeDirArrows = 0
map <C-t> :NERDTreeToggle<CR>
" map <Space-p-t> :NERDTreeToggle<CR>


" ==== Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['standard']
let g:syntastic_javascript_standard_generic = 1
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = '$(npm bin)/eslint'
" let g:syntastic_javascript_eslint_exe = '[ -f $(npm bin)/eslint ] && $(npm bin)/eslint || eslint'
let g:syntastic_error_symbol = '‚ùå'
let g:syntastic_style_error_symbol = '‚ÅâÔ∏è'
let g:syntastic_warning_symbol = '‚ö†Ô∏è'
let g:syntastic_style_warning_symbol = 'üí©'
" let g:syntastic_python_checkers = [ 'pylint', 'flake8', 'pep8', 'pyflakes', 'python']
" let g:syntastic_yaml_checkers = ['jsyaml']
let g:syntastic_html_tidy_exec = 'tidy5'
let g:syntastic_scss_checkers=['']
" autocmd FileType javascript.jsx setlocal commentstring={/*\ %s\ */}
" remember :SyntasticCheck :SyntasticToggleMode
nmap <C-x> :SyntasticCheck<CR>

" ==== flake8 for pyhton
" let g:flake8_show_in_file=1


" ==== snippets
" let g:UltiSnipsExpandTrigger="<A-ENTER>"
" let g:UltiSnipsJumpForwardTrigger="<A-ENTER>"
" let g:UltiSnipsJumpBackwardTrigger="<A-BACKSPACE>"
" If you want :UltiSnipsEdit to split your window.
" let g:UltiSnipsEditSplit = 'vertical'


" ==== Easymotion
" let g:EasyMotion_do_mapping = 0
" let g:EasyMotion_smartcase = 1
" nmap f <Plug>(easymotion-s)


" ==== moving around
" nmap <silent> <A-Up> :wincmd k<CR>
" nmap <silent> <A-Down> :wincmd j<CR>
" nmap <silent> <A-Left> :wincmd h<CR>
" nmap <silent> <A-Right> :wincmd l<CR>


" ==== disable mouse
set mouse=c


" ==== disable swap file warning
set shortmess+=A


" ==== custom commands
" command JsonPretty execute ":%!python -m json.tool"
" set secure


" custom
set hlsearch
" control the behave of backspace
" set backspace=indent,eol,start
imap fd <Esc>
" airline {{{
  " if !exists('g:airline_symbols')
  "   let g:airline_symbols = {}
  " endif
  " let g:airline_left_sep = 'ÓÇ∞'
  " let g:airline_left_alt_sep = '‚ùØ'
  " let g:airline_right_sep = '‚óÄ'
  " let g:airline_right_alt_sep = '‚ùÆ'
  " let g:airline_symbols.linenr = '¬∂'
  " let g:airline_symbols.branch = 'ÓÇ†‚éá'
  " ÊòØÂê¶ÊâìÂºÄtabline
  " let g:airline#extensions#tabline#enabled = 1
  let g:airline_theme = 'drak'
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#left_sep = ' '
  let g:airline#extensions#tabline#left_alt_sep = ' '
  let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
  let g:airline_powerline_fonts = 1
" }}}


" js, jsx part
" let g:jsx_ext_required = 1


" key map
nmap <C-h> <C-W>h
nmap <C-j> <C-W>j
nmap <C-k> <C-W>k
nmap <C-l> <C-W>l
" nmap <C-s> :w<CR>
nmap <C-s> :update<CR>
vmap <C-s> <C-C>:update<CR>
imap <C-s> <C-O>:update<CR>

vnoremap > ><CR>gv
vnoremap < <<CR>gv
